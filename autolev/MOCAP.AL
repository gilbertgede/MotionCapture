%---------------------------------------------------------------------%
%    FILE: MOCAP.AL
%    DATE: MARCH 5, 2009
%  AUTHOR: JASON MOORE
% PROBLEM: CALCULATES VIRTUAL MARKER POSITIONS AND RIGID BODY MOTIONS
%          OF THE BICYCLE FOR PRINCIPAL COMPONENT ANALYSIS
%   NOTES:
%---------------------------------------------------------------------%
%         DEFAULT SETTINGS
%---------------------------------------------------------------------%

BEEPSOUND OFF
%AUTOZ OFF
%AUTORHS OFF
OVERWRITE ALL
DEGREES OFF
%---------------------------------------------------------------------%
% DECLARE THE FRAMES
%---------------------------------------------------------------------%
% A: YAW
% B: ROLL
% C: REAR WHEEL
% D: REAR FRAME
% E: HANDLEBAR/FORK ASSEMBLY
% F: FRONT WHEEL
% M: MOTION CAPTURE FRAME

FRAMES A,B,C,D,E,F,M

% DECLARE THE NEWTONIAN FRAME

NEWTONIAN N
%---------------------------------------------------------------------%
% DEFINE THE M FRAME RELATIVE TO THE NEWTONIAN FRAME
%---------------------------------------------------------------------%
SIMPROT(N,M,1,PI)
P_NO_MO>=0>
%---------------------------------------------------------------------%
% DECLARE MARKER POINTS AND THE GROUND CONTACT POINTS
%---------------------------------------------------------------------%
POINTS M{1:41}
%---------------------------------------------------------------------%
% DECLARE MEASURED MARKER COORDINATES
%---------------------------------------------------------------------%
CONSTANTS X{1:31},Y{1:31},Z{1:31}
%---------------------------------------------------------------------%
% DEFINE THE POSITION VECTORS TO THE MARKERS
%---------------------------------------------------------------------%
P_MO_M1>= X1 *M1>+Y1 *M2>+Z1 *M3> % RIGHT FOOT
P_MO_M2>= X2 *M1>+Y2 *M2>+Z2 *M3> % RIGHT ANKLE
P_MO_M3>= X3 *M1>+Y3 *M2>+Z3 *M3> % RIGHT KNEE
P_MO_M4>= X4 *M1>+Y4 *M2>+Z4 *M3> % RIGHT HIP
P_MO_M5>= X5 *M1>+Y5 *M2>+Z5 *M3> % LEFT FOOT
P_MO_M6>= X6 *M1>+Y6 *M2>+Z6 *M3> % LEFT ANKLE
P_MO_M7>= X7 *M1>+Y7 *M2>+Z7 *M3> % LEFT KNEE
P_MO_M8>= X8 *M1>+Y8 *M2>+Z8 *M3> % LEFT HIP
P_MO_M9>= X9 *M1>+Y9 *M2>+Z9 *M3> % LEFT BUTT
P_MO_M10>=X10*M1>+Y10*M2>+Z10*M3> % LEFT LOWER SPINE
P_MO_M11>=X11*M1>+Y11*M2>+Z11*M3> % SHOULDER BLADES
P_MO_M12>=X12*M1>+Y12*M2>+Z12*M3> % NECK
P_MO_M13>=X13*M1>+Y13*M2>+Z13*M3> % RIGHT WRIST
P_MO_M14>=X14*M1>+Y14*M2>+Z14*M3> % RIGHT ELBOW
P_MO_M15>=X15*M1>+Y15*M2>+Z15*M3> % RIGHT SHOULDER
P_MO_M16>=X16*M1>+Y16*M2>+Z16*M3> % RIGHT TEMPLE
P_MO_M17>=X17*M1>+Y17*M2>+Z17*M3> % LEFT WRIST
P_MO_M18>=X18*M1>+Y18*M2>+Z18*M3> % LEFT ELBOW
P_MO_M19>=X19*M1>+Y19*M2>+Z19*M3> % LEFT SHOULDER
P_MO_M20>=X20*M1>+Y20*M2>+Z20*M3> % LEFT TEMPLE
P_MO_M21>=X21*M1>+Y21*M2>+Z21*M3> % RIGHT FRONT WHEEL
P_MO_M22>=X22*M1>+Y22*M2>+Z22*M3> % RIGHT HEAD TUBE
P_MO_M23>=X23*M1>+Y23*M2>+Z23*M3> % RIGHT HANDLEBAR
P_MO_M24>=X24*M1>+Y24*M2>+Z24*M3> % RIGHT SEAT STAY
P_MO_M25>=X25*M1>+Y25*M2>+Z25*M3> % RIGHT REAR WHEEL
P_MO_M26>=X26*M1>+Y26*M2>+Z26*M3> % SEAT POST
P_MO_M27>=X27*M1>+Y27*M2>+Z27*M3> % LEFT FRONT WHEEL
P_MO_M28>=X28*M1>+Y28*M2>+Z28*M3> % LEFT HEAD TUBE
P_MO_M29>=X29*M1>+Y29*M2>+Z29*M3> % LEFT HANDLEBAR
P_MO_M30>=X30*M1>+Y30*M2>+Z30*M3> % LEFT SEAT STAY
P_MO_M31>=X31*M1>+Y31*M2>+Z31*M3> % LEFT REAR WHEEL
%---------------------------------------------------------------------%
% UNCOMMENT TO INSERT NUMERICAL VALUES
%---------------------------------------------------------------------%
% X21=0.7401
% X22=0.5653
% X23=0.5476
% X24=-0.1368
% X25=-0.2832
% X26=-0.0460
% X27=0.7487
% X28=0.5636
% X29=0.6013
% X30=-0.1502
% X31=-0.2975
% Y21=1.6136
% Y22=1.6570
% Y23=1.3829
% Y24=1.5851
% Y25=1.5347
% Y26=1.6470
% Y27=1.7808
% Y28=1.7105
% Y29=1.9618
% Y30=1.7118
% Y31=1.7516
% Z21=0.3275
% Z22=0.7639
% Z23=0.9360
% Z24=0.5644
% Z25=0.3343
% Z26=0.8426
% Z27=0.3355
% Z28=0.7623
% Z29=0.9911
% Z30=0.5624
% Z31=0.3391 
%---------------------------------------------------------------------%
% CALCULATE MIDPOINT VIRTUAL MARKERS
%---------------------------------------------------------------------%
P_MO_M32>=(P_MO_M21>+P_MO_M27>)/2 % FRONT WHEEL CENTER
P_MO_M33>=(P_MO_M22>+P_MO_M28>)/2 % HEADTUBE CENTER
P_MO_M34>=(P_MO_M23>+P_MO_M29>)/2 % HANDLEBAR CENTER
P_MO_M35>=(P_MO_M24>+P_MO_M30>)/2 % SEAT STAY CENTER
P_MO_M36>=(P_MO_M25>+P_MO_M31>)/2 % REAR WHEEL CENTER
%---------------------------------------------------------------------%
% CALCULATE D2> (NORMAL VECTOR TO THE FRAME SYMMETRY PLANE)
%---------------------------------------------------------------------%
% THIS FITS A PLANE THROUGH M26, M33, M35, AND M36 AND CALCULTES THE
% NORMAL
% CONSTANTS A,B,C % PLANE CONSTANTS
% XI=X26+DOT(P_MO_M33>,M1>)+DOT(P_MO_M35>,M1>)+DOT(P_MO_M36>,M1>)
% YI=Y26+DOT(P_MO_M33>,M2>)+DOT(P_MO_M35>,M2>)+DOT(P_MO_M36>,M2>)
% ZI=Z26+DOT(P_MO_M33>,M3>)+DOT(P_MO_M35>,M3>)+DOT(P_MO_M36>,M3>)
% XISQ=X26^2+DOT(P_MO_M33>,M1>)^2+DOT(P_MO_M35>,M1>)^2+DOT(P_MO_M36>,M1>)^2
% YISQ=Y26^2+DOT(P_MO_M33>,M2>)^2+DOT(P_MO_M35>,M2>)^2+DOT(P_MO_M36>,M2>)^2
% XIYI=X26*Y26+DOT(P_MO_M33>,M1>)*DOT(P_MO_M33>,M2>)+DOT(P_MO_M35>,M1>)*DOT(P_MO_M35>,M2>)+DOT(P_MO_M36>,M1>)*DOT(P_MO_M36>,M2>)
% XIZI=X26*Z26+DOT(P_MO_M33>,M1>)*DOT(P_MO_M33>,M3>)+DOT(P_MO_M35>,M1>)*DOT(P_MO_M35>,M3>)+DOT(P_MO_M36>,M1>)*DOT(P_MO_M36>,M3>)
% YIZI=Y26*Z26+DOT(P_MO_M33>,M2>)*DOT(P_MO_M33>,M3>)+DOT(P_MO_M35>,M2>)*DOT(P_MO_M35>,M3>)+DOT(P_MO_M36>,M2>)*DOT(P_MO_M36>,M3>)
% PFIT[1,1]=XISQ*A+XIYI*B+XI*C-XIZI
% PFIT[2,1]=XIYI*A+YISQ*B+YI*C-YIZI
% PFIT[3,1]=XI*A+YI*B+4*C-ZI
% SOLVE(PFIT,A,B,C)
% XB2>=UNITVEC(A*M1>+B*M2>-1*M3>)

% DEFINE THE NORMAL TO A PLANE THROUGH M26, M33 AND M36
XB2>=UNITVEC(CROSS(P_MO_M36>-P_MO_M26>,P_MO_M33>-P_MO_M26>))
XB1>=UNITVEC(CROSS(XB2>,N3>))
XB3>=UNITVEC(CROSS(XB1>,XB2>))

XA1>=XB1>
XA3>=N3>
XA2>=CROSS(XA3>,XA1>)

CONSTANTS LAMBDA
% LAMBDA=0.2967
XD1>=COS(LAMBDA)*XB1>-SIN(LAMBDA)*XB3>
XD2>=XB2>
XD3>=CROSS(XD1>,XD2>)

XE2>=UNITVEC(P_M27_M21>)
XE3>=XD3>
XE1>=UNITVEC(CROSS(XE3>,XE2>))

% CALCULATE E2> (UNIT VECTOR ALONG THE FRONT WHEEL AXIS)
% XE2>=UNITVEC(P_M27_M21>)
% CALCULATE E3> (STEER AXIS)
% XE3>=-SIGN(DOT(XE2>,XB1>))*UNITVEC(CROSS(XB2>,XE2>))
% XE1>=CROSS(XE2>,XE3>)

% XD2>=XB2>
% XD3>=XE3>
% XD1>=UNITVEC(CROSS(XD2>,XD3>))

%---------------------------------------------------------------------%
% CALCULATE GEOMETRICAL CONSTANTS
%---------------------------------------------------------------------%

% CALCULATE THE FRONT WHEEL RADIUS
RR=-DOT(P_MO_M36>,N3>)/DOT(XB3>,N3>)
% CALCULATE THE REAR WHEEL RADIUS
RF=DOT(-P_MO_M32>,N3>)/SIN(ACOS(DOT(XE2>,N3>)))
CONSTANTS LCS,HBB
% LCS=0.44
% HBB=0.29
% CALCULATE BOTTOM BRACKET VIRTUAL MARKER
P_M36_M37>=LCS*COS(LAMBDA+ASIN((RR-HBB)/LCS))*XD1>+LCS*SIN(LAMBDA+ASIN((RR-HBB)/LCS))*XD3>
% DEFINE A HANDLEBAR MARKER ON THE STEER AXIS
P_M33_M38>=-ABS(DOT(P_M33_M34>,XE3>))*XE3>
% DEFINE A MARKER AT THE REAR WHEEL CONTACT POINT
P_MO_M39>=P_MO_M36>+RR*XB3>
% DEFINE A MARKER AT THE FRONT WHEEL CONTACT POINT
P_M32_M40>=RF*UNITVEC(CROSS(CROSS(XE2>,N3>),XE2>))

% FIND THE HESSIAN FORM P FOR THE FORK AND FRAME PLANES
% PFORK =-DOT(XE2>,N1>)*DOT(P_NO_M32>,N1>)-DOT(XE2>,N2>)*DOT(P_NO_M32>,N2>)-DOT(XE2>,N3>)*DOT(P_NO_M32>,N3>)
% PFRAME=-DOT(XD2>,N1>)*DOT(P_NO_M36>,N1>)-DOT(XD2>,N2>)*DOT(P_NO_M36>,N2>)-DOT(XD2>,N3>)*DOT(P_NO_M36>,N3>)
% CONSTANTS XO,YO
% ZERO1=DOT(XE2>,N1>)*XO+DOT(XE2>,N2>)*YO+PFORK
% ZERO2=DOT(XD2>,N1>)*XO+DOT(XD2>,N2>)*YO+PFRAME
% SOLVE([ZERO1;ZERO2],XO,YO)
% P_NO_M37>=XO*N1>+YO*N2>+0*N3> % POINT WHERE THE STEER AXIS INTERSECTS THE GROUND PLANE

D1=MAG(CROSS(P_MO_M38>-P_MO_M33>,P_MO_M33>-P_MO_M36>))/MAG(P_MO_M38>-P_MO_M33>)
D2=MAG(CROSS(P_MO_M38>-P_MO_M33>,P_MO_M33>-P_MO_M32>))/MAG(P_MO_M38>-P_MO_M33>)
D3=DOT(XE3>,(-D2*XE1>-D1*XD1>-P_M39_M36>-P_M32_M40>-P_M40_M39>))
% DECLARE THE GENERALIZED COORDINATES
% Q1:  PERPENDICULAR DISTANCE FROM THE N2> AXIS TO THE REAR CONTACT
%      POINT IN THE GROUND PLANE
% Q2:  PERPENDICULAR DISTANCE FROM THE N1> AXIS TO THE REAR CONTACT
%      POINT IN THE GROUND PLANE
% Q3:  FRAME YAW ANGLE
% Q4:  FRAME ROLL ANGLE
% Q5:  REAR WHEEL ROTATION ANGLE
% Q6:  FRAME PITCH ANGLE RELATIVE TO THE ROLL FRAME
% Q7:  STEERING ROTATION ANGLE
% Q8:  FRONT WHEEL ROTATION ANGLE

Q1=DOT(N1>,P_MO_M39>)
Q2=DOT(N2>,P_MO_M39>)
Q3=SIGN(DOT(XA1>, N2>))*ACOS(DOT(XA1>, N1>)) 
Q4=SIGN(DOT(XB2>,XA3>))*ACOS(DOT(XB3>,XA3>))
Q6=SIGN(DOT(XD3>,XB1>))*ACOS(DOT(XB1>,XD1>))
Q7=SIGN(DOT(XE1>,XD2>))*ACOS(DOT(XD2>,XE2>))

XN[1 ]=DOT(P_MO_M1> ,N1>)
XN[2 ]=DOT(P_MO_M2> ,N1>)
XN[3 ]=DOT(P_MO_M3> ,N1>)
XN[4 ]=DOT(P_MO_M4> ,N1>)
XN[5 ]=DOT(P_MO_M5> ,N1>)
XN[6 ]=DOT(P_MO_M6> ,N1>)
XN[7 ]=DOT(P_MO_M7> ,N1>)
XN[8 ]=DOT(P_MO_M8> ,N1>)
XN[9 ]=DOT(P_MO_M9> ,N1>)
XN[10]=DOT(P_MO_M10>,N1>)
XN[11]=DOT(P_MO_M11>,N1>)
XN[12]=DOT(P_MO_M12>,N1>)
XN[13]=DOT(P_MO_M13>,N1>)
XN[14]=DOT(P_MO_M14>,N1>)
XN[15]=DOT(P_MO_M15>,N1>)
XN[16]=DOT(P_MO_M16>,N1>)
XN[17]=DOT(P_MO_M17>,N1>)
XN[18]=DOT(P_MO_M18>,N1>)
XN[19]=DOT(P_MO_M19>,N1>)
XN[20]=DOT(P_MO_M20>,N1>)
XN[21]=DOT(P_MO_M21>,N1>)
XN[22]=DOT(P_MO_M22>,N1>)
XN[23]=DOT(P_MO_M23>,N1>)
XN[24]=DOT(P_MO_M24>,N1>)
XN[25]=DOT(P_MO_M25>,N1>)
XN[26]=DOT(P_MO_M26>,N1>)
XN[27]=DOT(P_MO_M27>,N1>)
XN[28]=DOT(P_MO_M28>,N1>)
XN[29]=DOT(P_MO_M29>,N1>)
XN[30]=DOT(P_MO_M30>,N1>)
XN[31]=DOT(P_MO_M31>,N1>)
XN[32]=DOT(P_MO_M32>,N1>)
XN[33]=DOT(P_MO_M33>,N1>)
XN[34]=DOT(P_MO_M34>,N1>)
XN[35]=DOT(P_MO_M35>,N1>)
XN[36]=DOT(P_MO_M36>,N1>)
XN[37]=DOT(P_MO_M37>,N1>)
XN[38]=DOT(P_MO_M38>,N1>)
XN[39]=DOT(P_MO_M39>,N1>)
XN[40]=DOT(P_MO_M40>,N1>)

YN[1 ]=DOT(P_MO_M1> ,N2>)
YN[2 ]=DOT(P_MO_M2> ,N2>)
YN[3 ]=DOT(P_MO_M3> ,N2>)
YN[4 ]=DOT(P_MO_M4> ,N2>)
YN[5 ]=DOT(P_MO_M5> ,N2>)
YN[6 ]=DOT(P_MO_M6> ,N2>)
YN[7 ]=DOT(P_MO_M7> ,N2>)
YN[8 ]=DOT(P_MO_M8> ,N2>)
YN[9 ]=DOT(P_MO_M9> ,N2>)
YN[10]=DOT(P_MO_M10>,N2>)
YN[11]=DOT(P_MO_M11>,N2>)
YN[12]=DOT(P_MO_M12>,N2>)
YN[13]=DOT(P_MO_M13>,N2>)
YN[14]=DOT(P_MO_M14>,N2>)
YN[15]=DOT(P_MO_M15>,N2>)
YN[16]=DOT(P_MO_M16>,N2>)
YN[17]=DOT(P_MO_M17>,N2>)
YN[18]=DOT(P_MO_M18>,N2>)
YN[19]=DOT(P_MO_M19>,N2>)
YN[20]=DOT(P_MO_M20>,N2>)
YN[21]=DOT(P_MO_M21>,N2>)
YN[22]=DOT(P_MO_M22>,N2>)
YN[23]=DOT(P_MO_M23>,N2>)
YN[24]=DOT(P_MO_M24>,N2>)
YN[25]=DOT(P_MO_M25>,N2>)
YN[26]=DOT(P_MO_M26>,N2>)
YN[27]=DOT(P_MO_M27>,N2>)
YN[28]=DOT(P_MO_M28>,N2>)
YN[29]=DOT(P_MO_M29>,N2>)
YN[30]=DOT(P_MO_M30>,N2>)
YN[31]=DOT(P_MO_M31>,N2>)
YN[32]=DOT(P_MO_M32>,N2>)
YN[33]=DOT(P_MO_M33>,N2>)
YN[34]=DOT(P_MO_M34>,N2>)
YN[35]=DOT(P_MO_M35>,N2>)
YN[36]=DOT(P_MO_M36>,N2>)
YN[37]=DOT(P_MO_M37>,N2>)
YN[38]=DOT(P_MO_M38>,N2>)
YN[39]=DOT(P_MO_M39>,N2>)
YN[40]=DOT(P_MO_M40>,N2>)

ZN[1 ]=DOT(P_MO_M1> ,N3>)
ZN[2 ]=DOT(P_MO_M2> ,N3>)
ZN[3 ]=DOT(P_MO_M3> ,N3>)
ZN[4 ]=DOT(P_MO_M4> ,N3>)
ZN[5 ]=DOT(P_MO_M5> ,N3>)
ZN[6 ]=DOT(P_MO_M6> ,N3>)
ZN[7 ]=DOT(P_MO_M7> ,N3>)
ZN[8 ]=DOT(P_MO_M8> ,N3>)
ZN[9 ]=DOT(P_MO_M9> ,N3>)
ZN[10]=DOT(P_MO_M10>,N3>)
ZN[11]=DOT(P_MO_M11>,N3>)
ZN[12]=DOT(P_MO_M12>,N3>)
ZN[13]=DOT(P_MO_M13>,N3>)
ZN[14]=DOT(P_MO_M14>,N3>)
ZN[15]=DOT(P_MO_M15>,N3>)
ZN[16]=DOT(P_MO_M16>,N3>)
ZN[17]=DOT(P_MO_M17>,N3>)
ZN[18]=DOT(P_MO_M18>,N3>)
ZN[19]=DOT(P_MO_M19>,N3>)
ZN[20]=DOT(P_MO_M20>,N3>)
ZN[21]=DOT(P_MO_M21>,N3>)
ZN[22]=DOT(P_MO_M22>,N3>)
ZN[23]=DOT(P_MO_M23>,N3>)
ZN[24]=DOT(P_MO_M24>,N3>)
ZN[25]=DOT(P_MO_M25>,N3>)
ZN[26]=DOT(P_MO_M26>,N3>)
ZN[27]=DOT(P_MO_M27>,N3>)
ZN[28]=DOT(P_MO_M28>,N3>)
ZN[29]=DOT(P_MO_M29>,N3>)
ZN[30]=DOT(P_MO_M30>,N3>)
ZN[31]=DOT(P_MO_M31>,N3>)
ZN[32]=DOT(P_MO_M32>,N3>)
ZN[33]=DOT(P_MO_M33>,N3>)
ZN[34]=DOT(P_MO_M34>,N3>)
ZN[35]=DOT(P_MO_M35>,N3>)
ZN[36]=DOT(P_MO_M36>,N3>)
ZN[37]=DOT(P_MO_M37>,N3>)
ZN[38]=DOT(P_MO_M38>,N3>)
ZN[39]=DOT(P_MO_M39>,N3>)
ZN[40]=DOT(P_MO_M40>,N3>)

XB[1 ]=DOT(P_M36_M1> ,XB1>)
XB[2 ]=DOT(P_M36_M2> ,XB1>)
XB[3 ]=DOT(P_M36_M3> ,XB1>)
XB[4 ]=DOT(P_M36_M4> ,XB1>)
XB[5 ]=DOT(P_M36_M5> ,XB1>)
XB[6 ]=DOT(P_M36_M6> ,XB1>)
XB[7 ]=DOT(P_M36_M7> ,XB1>)
XB[8 ]=DOT(P_M36_M8> ,XB1>)
XB[9 ]=DOT(P_M36_M9> ,XB1>)
XB[10]=DOT(P_M36_M10>,XB1>)
XB[11]=DOT(P_M36_M11>,XB1>)
XB[12]=DOT(P_M36_M12>,XB1>)
XB[13]=DOT(P_M36_M13>,XB1>)
XB[14]=DOT(P_M36_M14>,XB1>)
XB[15]=DOT(P_M36_M15>,XB1>)
XB[16]=DOT(P_M36_M16>,XB1>)
XB[17]=DOT(P_M36_M17>,XB1>)
XB[18]=DOT(P_M36_M18>,XB1>)
XB[19]=DOT(P_M36_M19>,XB1>)
XB[20]=DOT(P_M36_M20>,XB1>)

YB[1 ]=DOT(P_M36_M1> ,XB2>)
YB[2 ]=DOT(P_M36_M2> ,XB2>)
YB[3 ]=DOT(P_M36_M3> ,XB2>)
YB[4 ]=DOT(P_M36_M4> ,XB2>)
YB[5 ]=DOT(P_M36_M5> ,XB2>)
YB[6 ]=DOT(P_M36_M6> ,XB2>)
YB[7 ]=DOT(P_M36_M7> ,XB2>)
YB[8 ]=DOT(P_M36_M8> ,XB2>)
YB[9 ]=DOT(P_M36_M9> ,XB2>)
YB[10]=DOT(P_M36_M10>,XB2>)
YB[11]=DOT(P_M36_M11>,XB2>)
YB[12]=DOT(P_M36_M12>,XB2>)
YB[13]=DOT(P_M36_M13>,XB2>)
YB[14]=DOT(P_M36_M14>,XB2>)
YB[15]=DOT(P_M36_M15>,XB2>)
YB[16]=DOT(P_M36_M16>,XB2>)
YB[17]=DOT(P_M36_M17>,XB2>)
YB[18]=DOT(P_M36_M18>,XB2>)
YB[19]=DOT(P_M36_M19>,XB2>)
YB[20]=DOT(P_M36_M20>,XB2>)

ZB[1 ]=DOT(P_M36_M1> ,XB3>)
ZB[2 ]=DOT(P_M36_M2> ,XB3>)
ZB[3 ]=DOT(P_M36_M3> ,XB3>)
ZB[4 ]=DOT(P_M36_M4> ,XB3>)
ZB[5 ]=DOT(P_M36_M5> ,XB3>)
ZB[6 ]=DOT(P_M36_M6> ,XB3>)
ZB[7 ]=DOT(P_M36_M7> ,XB3>)
ZB[8 ]=DOT(P_M36_M8> ,XB3>)
ZB[9 ]=DOT(P_M36_M9> ,XB3>)
ZB[10]=DOT(P_M36_M10>,XB3>)
ZB[11]=DOT(P_M36_M11>,XB3>)
ZB[12]=DOT(P_M36_M12>,XB3>)
ZB[13]=DOT(P_M36_M13>,XB3>)
ZB[14]=DOT(P_M36_M14>,XB3>)
ZB[15]=DOT(P_M36_M15>,XB3>)
ZB[16]=DOT(P_M36_M16>,XB3>)
ZB[17]=DOT(P_M36_M17>,XB3>)
ZB[18]=DOT(P_M36_M18>,XB3>)
ZB[19]=DOT(P_M36_M19>,XB3>)
ZB[20]=DOT(P_M36_M20>,XB3>)

SAVE MOCAP.ALL

OUTPUT Q1,Q2,Q3,Q4,Q6,Q7
OUTPUT RR,RF,D1,D2,D3
ENCODE XN,YN,ZN
ENCODE XB,YB,ZB
CODE ALGEBRAIC() MOCAP.M